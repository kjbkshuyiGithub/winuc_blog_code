# 博客项目Nginx配置
# 使用方法: 
# 1. 将此文件复制到 /etc/nginx/sites-available/team-blog.conf
# 2. 创建软链接: sudo ln -s /etc/nginx/sites-available/team-blog.conf /etc/nginx/sites-enabled/
# 3. 测试配置: sudo nginx -t
# 4. 重新加载Nginx: sudo systemctl reload nginx

server {
    listen 80;
    server_name example.com www.example.com;  # 替换为您的实际域名
    
    # 日志配置
    access_log /var/log/nginx/team-blog-access.log;
    error_log /var/log/nginx/team-blog-error.log;
    
    # HTTPS重定向（如果您希望强制使用HTTPS）
    # location / {
    #     return 301 https://$host$request_uri;
    # }
    
    # 静态文件缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|otf|eot)$ {
        root /var/www/team-blog/current/public;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri @proxy;
    }
    
    # 主代理配置
    location / {
        proxy_pass http://localhost:3000;  # Next.js应用运行的端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 备用代理
    location @proxy {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # 安全设置
    # 防止直接访问.env文件
    location ~ \.env {
        deny all;
        return 404;
    }
    
    # 防止直接访问隐藏文件
    location ~ /\. {
        deny all;
        return 404;
    }
}

# HTTPS配置 (取消注释以启用)
# server {
#     listen 443 ssl http2;
#     server_name example.com www.example.com;  # 替换为您的实际域名
#     
#     # SSL证书配置
#     ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
#     
#     # SSL设置优化
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 1d;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # HSTS (取消注释以启用)
#     # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#     
#     # 日志配置
#     access_log /var/log/nginx/team-blog-access.log;
#     error_log /var/log/nginx/team-blog-error.log;
#     
#     # 静态文件缓存
#     location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|otf|eot)$ {
#         root /var/www/team-blog/current/public;
#         expires 30d;
#         add_header Cache-Control "public, max-age=2592000";
#         try_files $uri @proxy;
#     }
#     
#     # 主代理配置
#     location / {
#         proxy_pass http://localhost:3000;  # Next.js应用运行的端口
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # 安全头
#         add_header X-Content-Type-Options "nosniff" always;
#         add_header X-Frame-Options "SAMEORIGIN" always;
#         add_header X-XSS-Protection "1; mode=block" always;
#         add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#         
#         # 超时设置
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#     
#     # 备用代理
#     location @proxy {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     # 安全设置
#     # 防止直接访问.env文件
#     location ~ \.env {
#         deny all;
#         return 404;
#     }
#     
#     # 防止直接访问隐藏文件
#     location ~ /\. {
#         deny all;
#         return 404;
#     }
# } 